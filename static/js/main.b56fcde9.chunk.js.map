{"version":3,"sources":["Components/Product.js","Components/BuySection.js","Components/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["Product","product","addInCart","console","log","productName","Card","className","CardImg","top","height","width","src","smallImage","alt","CardBody","CardTitle","CardText","productPrice","Button","color","onClick","BuySection","useState","setProduct","fetchPhotos","a","Axios","get","data","photos","allProduct","map","photo","medium","tinyImage","tiny","faker","random","word","commerce","price","id","datatype","uuid","useEffect","Container","fluid","Row","prod","Col","md","Cart","cartItem","removeItem","buyNow","amount","forEach","item","parseFloat","ListGroup","ListGroupItem","length","CardHeader","CardFooter","App","setCartItem","findIndex","array","toast","type","filter","i","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b56fcde9.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Card, CardImg, CardText, CardBody, CardTitle, Button} from \"reactstrap\"\r\nconst Product = ({product, addInCart}) => {\r\n    console.log(product.productName)\r\n    return(\r\n        <Card className=\"mt-2 mb-1\">\r\n            <CardImg top height=\"250\" width=\"100%\" src={product.smallImage} alt=\"Card DP\"/>\r\n            <CardBody className=\"text-center\">\r\n                <CardTitle>Name - {product.productName}</CardTitle>\r\n                <CardText className=\"secondary\">Rs. {product.productPrice}</CardText>\r\n                <Button color=\"success\" onClick={() => addInCart(product)}>Buy Now</Button>\r\n            </CardBody>\r\n        </Card>\r\n        // <div>\r\n        //     <img src={product.smallImage} alt=\"Small Profile\"></img>\r\n        //     <h1>{product.productName}</h1>\r\n        //     <h2>{product.productPrice}</h2>\r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default Product;","import React, {useState, useEffect} from 'react'\r\nimport Axios from 'axios';\r\n\r\nimport faker from 'faker';\r\nimport {Container, Col, Row} from 'reactstrap'\r\nimport Product from './Product';\r\n\r\nconst API_KEY = \"563492ad6f91700001000001846b2d62700f423eb4c059538d0c45cf\"\r\n\r\nconst url = \"https://api.pexels.com/v1/search?query=laptop&per_page=6&page=1\"\r\nconst localurl = \"https://jsonware.com/json/57d417ead33abc3045d24507b1c9f032.json\"\r\n\r\nconst BuySection = ({addInCart}) => {\r\n    const [product, setProduct] = useState([])\r\n    // const fetchPhotos = async () => {\r\n    //     const response = await Axios.get(url, {\r\n    //         header:{\r\n    //             Authorization: API_KEY\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    const fetchPhotos = async () =>{\r\n        const { data } = await Axios.get(localurl);\r\n\r\n        const { photos } = data;\r\n\r\n        const allProduct = photos.map(photo =>({\r\n            smallImage: photo.src.medium,\r\n            tinyImage: photo.src.tiny,\r\n            productName: faker.random.word(),\r\n            productPrice: faker.commerce.price(),\r\n            id: faker.datatype.uuid()\r\n        }))\r\n        setProduct(allProduct);\r\n    };\r\n    useEffect(()=>{\r\n        fetchPhotos();\r\n    },[])\r\n\r\n    return(\r\n        <Container fluid>\r\n            <h1 className=\"text-success text-center\">Buy Page</h1>\r\n            <Row>\r\n                \r\n                {product.map(prod => (\r\n                    <Col key={prod.id} md=\"4\">\r\n                        <Product product={prod} addInCart={addInCart}/>\r\n                    </Col>                  \r\n                ))}\r\n                \r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default BuySection;","import React from 'react'\r\nimport {\r\n    Container,\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Button,\r\n    CardHeader,\r\n    CardBody,\r\n    Card,\r\n    CardFooter,\r\n    Col,\r\n    Row,\r\n} from \"reactstrap\"\r\n\r\nconst Cart = ({cartItem, removeItem, buyNow}) => {\r\n    let amount = 0;\r\n    cartItem.forEach(item => {\r\n        amount = parseFloat(amount) + parseFloat(item.productPrice);\r\n    })\r\n    return (\r\n        <Container fluid>\r\n            <h1 className=\"text-success\">\r\n                Your Cart\r\n            </h1>\r\n            <ListGroup>\r\n                {cartItem.map(item =>(\r\n                    <ListGroupItem key={item.id}>\r\n                        <Row>\r\n                            <Col>\r\n                                <img \r\n                                height={80}\r\n                                src={item.smallImage}\r\n                                alt=\"xyz\"\r\n                                />\r\n                            </Col>\r\n                            <Col className=\"text-center\">\r\n                                <div className=\"text-primary\">\r\n                                    {item.productName}\r\n                                </div>\r\n                                <span>Price :- {item.productPrice}</span>\r\n                                <Button color=\"danger\" onClick={()=>removeItem(item)}>Remove</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                \r\n                ))}\r\n            </ListGroup>\r\n            {/* If EveryThing is empty */}\r\n            {\r\n                cartItem.length >= 1 ? (\r\n                    <Card className=\"text-center mt-3\">\r\n                        <CardHeader>\r\n                            Grand Total\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            Your Amount for {cartItem.length} products is {amount}\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button color=\"success\" onClick={buyNow}>Pay Here</Button>\r\n                        </CardFooter>\r\n                    </Card>\r\n                ) : (\r\n                    <h1 className=\"text-warning\">Cart is Empty</h1>\r\n                )\r\n            }\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Cart;","import React, {useState, useEffect} from 'react'\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./App.css\"\nimport BuySection from './Components/BuySection';\nimport {Container, Row, Col} from 'reactstrap'\nimport Cart from './Components/Cart';\n\n\nconst App = () => {\n    const [cartItem, setCartItem] = useState([])\n\n    const addInCart = (item) => {\n        const isAlreadyAdded = cartItem.findIndex(function(array){\n            return array.id === item.id\n        })\n        if(isAlreadyAdded !== -1){\n            toast(\"Already Added In Cart\", {\n                type: \"error\"\n            })\n        }\n        else{\n            setCartItem([...cartItem, item]);\n        }\n    }\n\n    const buyNow = () => {\n        setCartItem([])\n        toast(\"Purchase Complete\", {\n            type: \"success\"\n        })\n    }\n\n    const removeItem = (item) => {\n        setCartItem(cartItem.filter(i => i.id !== item.id))\n    };\n\n    return(\n        <Container fluid>\n            <ToastContainer/>\n            <Row>\n                <Col md=\"8\">\n                    <BuySection addInCart={addInCart}/>\n                </Col>\n                <Col md=\"4\">\n                    <Cart cartItem={cartItem} buyNow={buyNow} removeItem={removeItem}/>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}